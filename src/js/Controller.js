import createRequest from '../libs/createRequest';

import Chat from '../components/chat/Chat';
import Modal from '../components/modal/Modal';
import Users from '../components/users/Users';

export default class Controller {
  constructor(container) {
    if (!(container instanceof HTMLElement)) {
      throw new Error('This is not HTML element!');
    }

    this.container = container;
  }

  init() {
    this.renderModal();
    // this.renderPage();

    this.modal.submitEvent(this.addSubmitEvent.bind(this));
  }

  renderModal() {
    this.modal = new Modal(); // –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–∏–∫–Ω–µ–π–º–∞ —é–∑–µ—Ä–∞
  }

  renderPage() {
    this.modal.hide(); // —Å–æ–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞

    this.container.classList.remove('hidden'); // –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞

    this.users = new Users(this.container); // –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å —é–∑–µ—Ä–∞–º–∏

    this.users.addUser('Alexandra'); // –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —é–∑–µ—Ä–∞
    this.users.addUser('Petr'); // –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —é–∑–µ—Ä–∞
    this.users.addUser('Ivan'); // –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —é–∑–µ—Ä–∞
    this.users.addUser('You'); // –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —é–∑–µ—Ä–∞

    this.chat = new Chat(this.container); // –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏

    this.chat.addMessage('Alexandra, 23:04 20.03.2019', 'I can\'t sleep...'); // –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    this.chat.addMessage('You, 23:10 20.03.2019', 'Listen this: https://youtu.be.xxxxxx'); // –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    this.chat.addMessage('Alexandra, 01:15 21.03.2019', 'Thxx!! You help me! I listen this music 1 hour and I sleep. Now is my favorite music!'); // –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    this.chat.addMessage('Petr, 01:25 21.03.2019', 'I subscribed just for that üòÅüòÅüòÅ'); // –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
  }

  async addSubmitEvent(e) {
    e.preventDefault();

    const name = this.modal.getInputValue();

    if (!name) {
      // TODO: –≤—ã–≤–µ—Å—Ç–∏ –ø–æ–¥—Å–∫–∞–∑–∫—É, —á—Ç–æ –ø–æ–ª–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø—É—Å—Ç—ã–º!!!
      return;
    }

    const options = {
      method: 'POST',
      url: '/new-user',
      body: {
        name,
      },
    };

    // –∏–ª–∏ data: { status: "ok", user { id: "...", name: "..." } }
    // –∏–ª–∏ data: { status: "error", message: "This name is already taken!" }
    const data = await createRequest(options);
    console.log('data: ', data); // NOTE: –æ—Ç–ª–∞–¥–∫–∞

    if (data.error) {
      // TODO: –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞!!!
      console.log('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞');
      return;
    }

    if (data.status === 'error') {
      // TODO: –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –∑–∞–Ω—è—Ç–æ–≥–æ –Ω–∏–∫–Ω–µ–π–º–∞!!!
      console.log('data.message: ', data.message);
      return;
    }

    if (data.status === 'ok') {
      // TODO: —Ä–∞–±–æ—Ç–∞–µ–º —Å —é–∑–µ—Ä–æ–º!!!
      console.log('data.user: ', data.user);
    }
  }
}
